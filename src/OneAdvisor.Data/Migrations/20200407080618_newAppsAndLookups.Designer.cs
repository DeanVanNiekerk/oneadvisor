// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OneAdvisor.Data;

namespace OneAdvisor.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200407080618_newAppsAndLookups")]
    partial class newAppsAndLookups
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("idn_RoleClaim");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("idn_UserClaim");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("idn_UserLogin");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("idn_UserRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("idn_UserToken");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Client.ClientEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlternateIdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ClientTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaidenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MarriageDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MarritalStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PreferredName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientTypeId");

                    b.HasIndex("MarritalStatusId");

                    b.HasIndex("OrganisationId");

                    b.ToTable("clt_Client");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Client.ContactEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContactTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ContactTypeId");

                    b.ToTable("clt_Contact");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Client.Lookup.ClientTypeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("clt_ClientType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("27bb22b3-4c3d-41a3-48bf-690a98f8f780"),
                            Code = "individual",
                            DisplayOrder = 1,
                            Name = "Individual"
                        },
                        new
                        {
                            Id = new Guid("295565bf-7485-85f1-6c98-947ab0b7770c"),
                            Code = "company",
                            DisplayOrder = 2,
                            Name = "Company"
                        },
                        new
                        {
                            Id = new Guid("55f6c0ef-ae2c-faac-adff-ea3bd269043f"),
                            Code = "trust",
                            DisplayOrder = 3,
                            Name = "Trust"
                        },
                        new
                        {
                            Id = new Guid("bc0b4043-25cc-dbb6-cfd5-981557a10ca1"),
                            Code = "unknown",
                            DisplayOrder = 4,
                            Name = "Unknown Entity"
                        });
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Client.Lookup.ContactTypeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("clt_ContactType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d6349e22-3e27-404a-8584-58e420510834"),
                            Name = "Cellphone Number"
                        },
                        new
                        {
                            Id = new Guid("b3c261d0-4e1d-4dd8-b944-6d6afd1795e0"),
                            Name = "Email Address"
                        });
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Client.Lookup.MarritalStatusEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("clt_MarritalStatus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("77fa3769-7775-4cdd-b5d4-8b526b2d894c"),
                            Name = "Single"
                        },
                        new
                        {
                            Id = new Guid("5f7a5d69-845c-4f8d-b108-7c70084f3f6a"),
                            Name = "Married COP"
                        },
                        new
                        {
                            Id = new Guid("b31331ec-73cb-4985-aa93-e60e04a48095"),
                            Name = "Married ANC"
                        },
                        new
                        {
                            Id = new Guid("b16cbd3b-cf50-4a74-8f38-a8ca6b1cb83f"),
                            Name = "Married ANC (with Accrual)"
                        },
                        new
                        {
                            Id = new Guid("e4f03497-5dbf-4bd0-bc14-660a3969f011"),
                            Name = "Widowed"
                        },
                        new
                        {
                            Id = new Guid("91ebd765-bd8b-4908-94dc-00f09fe37ca7"),
                            Name = "Divorced"
                        });
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Client.Lookup.PolicyProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PolicyProductTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PolicyProductTypeId");

                    b.ToTable("clt_PolicyProduct");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Client.Lookup.PolicyProductTypeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PolicyTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PolicyTypeId");

                    b.ToTable("clt_PolicyProductType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("95b24f26-5d16-0289-ea4d-754603c3e950"),
                            Code = "med_medical_aid",
                            Name = "Medical Aid",
                            PolicyTypeId = new Guid("023107f5-97a6-456d-9182-7bbda72ca82a")
                        },
                        new
                        {
                            Id = new Guid("f6db6be4-2672-7063-6920-ae95a0130b73"),
                            Code = "med_gap_cover",
                            Name = "Gap Cover",
                            PolicyTypeId = new Guid("023107f5-97a6-456d-9182-7bbda72ca82a")
                        },
                        new
                        {
                            Id = new Guid("0269860e-a5ab-7912-e65a-539c124d5593"),
                            Code = "med_add_medical_savings",
                            Name = "Extra Medical Savings",
                            PolicyTypeId = new Guid("023107f5-97a6-456d-9182-7bbda72ca82a")
                        },
                        new
                        {
                            Id = new Guid("178c71d8-f378-fc92-6347-149108b4f24f"),
                            Code = "life_life_insurance",
                            Name = "Life Insurance",
                            PolicyTypeId = new Guid("f3d877b4-1800-4711-8cc9-35169f8bd60b")
                        },
                        new
                        {
                            Id = new Guid("0c55f316-f446-a8f8-488c-ac1eb587a9c9"),
                            Code = "inv_unit_trust",
                            Name = "Unit Trust",
                            PolicyTypeId = new Guid("a98bb718-4acb-4fad-afe9-5fbba00203b9")
                        },
                        new
                        {
                            Id = new Guid("3b7ccd1e-44b5-d81e-b6b4-18c56c1c077f"),
                            Code = "inv_endowment",
                            Name = "Endowment",
                            PolicyTypeId = new Guid("a98bb718-4acb-4fad-afe9-5fbba00203b9")
                        },
                        new
                        {
                            Id = new Guid("62007d95-7d61-4182-b998-9ffb4c5fda0b"),
                            Code = "inv_tax_free",
                            Name = "Tax Free Savings",
                            PolicyTypeId = new Guid("a98bb718-4acb-4fad-afe9-5fbba00203b9")
                        },
                        new
                        {
                            Id = new Guid("4df79496-16cd-9375-eb86-3cbcd8eb47fc"),
                            Code = "inv_preservation_pension",
                            Name = "Preservation Pension",
                            PolicyTypeId = new Guid("a98bb718-4acb-4fad-afe9-5fbba00203b9")
                        },
                        new
                        {
                            Id = new Guid("5541cf6c-50ef-5fcd-f584-6673a125c817"),
                            Code = "inv_preservation_provident",
                            Name = "Preservation Provident",
                            PolicyTypeId = new Guid("a98bb718-4acb-4fad-afe9-5fbba00203b9")
                        },
                        new
                        {
                            Id = new Guid("273e862c-abd5-ac36-3bb7-31ea2e18cb9d"),
                            Code = "inv_retirement_annuity",
                            Name = "Retirement Annuity",
                            PolicyTypeId = new Guid("a98bb718-4acb-4fad-afe9-5fbba00203b9")
                        },
                        new
                        {
                            Id = new Guid("062d7233-f743-9e5a-8c07-d5580bfa11a4"),
                            Code = "short_personal_lines",
                            Name = "Personal Lines",
                            PolicyTypeId = new Guid("a90a5869-4da5-4cce-8973-9a8194c2bdcb")
                        },
                        new
                        {
                            Id = new Guid("67c1d0a3-b5b4-3c23-4256-4e79266f5378"),
                            Code = "short_commercial_lines",
                            Name = "Commercial Lines",
                            PolicyTypeId = new Guid("a90a5869-4da5-4cce-8973-9a8194c2bdcb")
                        },
                        new
                        {
                            Id = new Guid("da086441-91a9-6e5e-5ad6-3167b2076329"),
                            Code = "rewards_rewards_program",
                            Name = "Rewards Program",
                            PolicyTypeId = new Guid("3d991459-2043-46b9-9357-5446a993b81d")
                        },
                        new
                        {
                            Id = new Guid("a202bce5-8e20-a795-1a38-c93b0cfd41ac"),
                            Code = "group_scheme_pension",
                            Name = "Pension Fund",
                            PolicyTypeId = new Guid("8fe8751f-c4f0-01c5-26bd-a92f918651d2")
                        },
                        new
                        {
                            Id = new Guid("988d7de4-1760-f6e8-b9c2-c68e4d95e7e2"),
                            Code = "group_scheme_provident",
                            Name = "Provident Fund",
                            PolicyTypeId = new Guid("8fe8751f-c4f0-01c5-26bd-a92f918651d2")
                        },
                        new
                        {
                            Id = new Guid("bdb36139-07a5-13aa-7431-128329c3bb28"),
                            Code = "group_scheme_risk",
                            Name = "Group Risk",
                            PolicyTypeId = new Guid("8fe8751f-c4f0-01c5-26bd-a92f918651d2")
                        });
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Client.Lookup.PolicyTypeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("clt_PolicyType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a98bb718-4acb-4fad-afe9-5fbba00203b9"),
                            Code = "investment",
                            DisplayOrder = 1,
                            Name = "Investment"
                        },
                        new
                        {
                            Id = new Guid("f3d877b4-1800-4711-8cc9-35169f8bd60b"),
                            Code = "life_insurance",
                            DisplayOrder = 2,
                            Name = "Life Insurance"
                        },
                        new
                        {
                            Id = new Guid("a90a5869-4da5-4cce-8973-9a8194c2bdcb"),
                            Code = "short_term",
                            DisplayOrder = 3,
                            Name = "Short Term Insurance"
                        },
                        new
                        {
                            Id = new Guid("023107f5-97a6-456d-9182-7bbda72ca82a"),
                            Code = "medical_cover",
                            DisplayOrder = 4,
                            Name = "Medical Cover"
                        },
                        new
                        {
                            Id = new Guid("3d991459-2043-46b9-9357-5446a993b81d"),
                            Code = "rewards",
                            DisplayOrder = 5,
                            Name = "Rewards Program"
                        },
                        new
                        {
                            Id = new Guid("8fe8751f-c4f0-01c5-26bd-a92f918651d2"),
                            Code = "group_scheme",
                            DisplayOrder = 6,
                            Name = "Group scheme"
                        },
                        new
                        {
                            Id = new Guid("c498f023-a7c9-f6c3-e021-c265972a209c"),
                            Code = "unknown",
                            DisplayOrder = 7,
                            Name = "Unknown"
                        });
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Client.PolicyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PolicyProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PolicyProductTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PolicyTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Premium")
                        .HasColumnType("Money");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("_NumberAliases")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NumberAliases")
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("'[]'");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PolicyProductId");

                    b.HasIndex("PolicyProductTypeId");

                    b.HasIndex("PolicyTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("clt_Policy");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Commission.CommissionAllocationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FromClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ToClientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FromClientId");

                    b.HasIndex("ToClientId");

                    b.ToTable("com_CommissionAllocation");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Commission.CommissionAllocationPolicyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommissionAllocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PolicyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CommissionAllocationId");

                    b.HasIndex("PolicyId");

                    b.ToTable("com_CommissionAllocationPolicy");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Commission.CommissionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AmountIncludingVAT")
                        .HasColumnType("Money");

                    b.Property<Guid>("CommissionStatementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommissionTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PolicyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SourceData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SplitGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("VAT")
                        .HasColumnType("Money");

                    b.HasKey("Id");

                    b.HasIndex("CommissionStatementId");

                    b.HasIndex("CommissionTypeId");

                    b.HasIndex("PolicyId");

                    b.HasIndex("UserId", "CommissionStatementId", "CommissionTypeId", "PolicyId")
                        .HasName("INDEX_Commission_UserId_CommissionStatementId");

                    b.ToTable("com_Commission");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Commission.CommissionErrorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommissionStatementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CommissionTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PolicyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CommissionStatementId");

                    b.HasIndex("PolicyId");

                    b.ToTable("com_CommissionError");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Commission.CommissionSplitRuleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Split")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("com_CommissionSplitRule");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Commission.CommissionSplitRulePolicyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommissionSplitRuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PolicyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CommissionSplitRuleId");

                    b.HasIndex("PolicyId")
                        .IsUnique();

                    b.ToTable("com_CommissionSplitRulePolicy");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Commission.CommissionStatementEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AmountIncludingVAT")
                        .HasColumnType("Money");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DateMonth")
                        .HasColumnType("int");

                    b.Property<int>("DateYear")
                        .HasColumnType("int");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Processed")
                        .HasColumnType("bit");

                    b.Property<decimal>("VAT")
                        .HasColumnType("Money");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OrganisationId");

                    b.ToTable("com_CommissionStatement");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Commission.CommissionStatementTemplateEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Config")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("com_CommissionStatementTemplate");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Commission.Lookup.CommissionEarningsTypeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("com_CommissionEarningsType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8b42edc0-fac6-e946-c779-9d90a805c294"),
                            DisplayOrder = 0,
                            Name = "Monthly Annuity"
                        },
                        new
                        {
                            Id = new Guid("e8799015-6f4a-5d45-5be9-0fcd516e0951"),
                            DisplayOrder = 1,
                            Name = "Annual Annuity"
                        },
                        new
                        {
                            Id = new Guid("e7f98561-f018-3edd-2118-e3646c89e2a2"),
                            DisplayOrder = 2,
                            Name = "Life 1st Years"
                        },
                        new
                        {
                            Id = new Guid("9f8fc29d-0f1c-b952-d446-79cc3ed967d7"),
                            DisplayOrder = 3,
                            Name = "Once Off Commissions"
                        },
                        new
                        {
                            Id = new Guid("27ec936b-5db7-64b8-1a1b-5edb3b56a20d"),
                            DisplayOrder = 4,
                            Name = "Unknown"
                        });
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Commission.Lookup.CommissionTypeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CommissionEarningsTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PolicyTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CommissionEarningsTypeId");

                    b.HasIndex("PolicyTypeId");

                    b.ToTable("com_CommissionType");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.ApplicationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ColourHex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("dir_Application");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66c3b4e8-8a30-4a4b-be4d-3928d12fefe9"),
                            ColourHex = "#CC3F0C",
                            Name = "Directory"
                        },
                        new
                        {
                            Id = new Guid("605ea52c-3627-48e2-8f7c-4819c5ea555b"),
                            ColourHex = "#009FFD",
                            Name = "Client"
                        },
                        new
                        {
                            Id = new Guid("2fca4500-9142-4940-aaf4-b18925c96d66"),
                            ColourHex = "#2A2A72",
                            Name = "Commission"
                        },
                        new
                        {
                            Id = new Guid("ef1bb77d-981a-743f-9543-ec36f396536c"),
                            ColourHex = "#005A38",
                            Name = "Compliance"
                        },
                        new
                        {
                            Id = new Guid("ca35b7ac-351a-0ff1-5d45-9bee6de9e051"),
                            ColourHex = "#AE1827",
                            Name = "Invest"
                        });
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.AuditLogEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Entity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("dir_AuditLog");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.BranchEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId");

                    b.ToTable("dir_Branch");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.ChangeLogEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Log")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Published")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VersionNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("dir_ChangeLog");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.Lookup.AdviceScopeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("dir_AdviceScope");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f1d1bdcd-83cc-4ae9-9c33-9a4de93f9af1"),
                            Name = "Estate Planning"
                        },
                        new
                        {
                            Id = new Guid("a17d7c4d-4159-4cd0-a37d-7d0d006d11f6"),
                            Name = "Retirement Planning"
                        },
                        new
                        {
                            Id = new Guid("e26f2a86-832e-47c5-a6e4-00920102ce0c"),
                            Name = "Investment Planning"
                        },
                        new
                        {
                            Id = new Guid("b415119f-4070-4ddf-8329-c946496bcb2f"),
                            Name = "Medical Benefits"
                        },
                        new
                        {
                            Id = new Guid("76c1dc96-ba96-4136-ac70-386d355354da"),
                            Name = "Short Term Insurance"
                        },
                        new
                        {
                            Id = new Guid("b9336610-828b-490c-9b4d-b4478d3c958b"),
                            Name = "Fiduciary services"
                        });
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.Lookup.AdviceServiceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisplayOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("dir_AdviceService");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f8d0f35b-9eb5-4be4-b2ab-0a9c3547360d"),
                            DisplayOrder = 1,
                            Name = "Full financial needs analysis"
                        },
                        new
                        {
                            Id = new Guid("b2435736-8fa7-4b34-a7b8-ee08f949e863"),
                            DisplayOrder = 2,
                            Name = "Risk Planning for death"
                        },
                        new
                        {
                            Id = new Guid("6ef0e93b-a4fd-babc-030e-09c7ab293b88"),
                            DisplayOrder = 3,
                            Name = "Risk Planning for disability"
                        },
                        new
                        {
                            Id = new Guid("247c5a3b-cb44-4bd2-5881-d8e146ab75ec"),
                            DisplayOrder = 4,
                            Name = "Risk Planning for for dread disease/trauma "
                        },
                        new
                        {
                            Id = new Guid("04815a0f-6102-47db-8a5c-e28baa9cf428"),
                            DisplayOrder = 5,
                            Name = "Planning for retirement"
                        },
                        new
                        {
                            Id = new Guid("7f3eb0b1-5431-4501-a257-f6c76b96f17a"),
                            DisplayOrder = 6,
                            Name = "Planning at retirement"
                        },
                        new
                        {
                            Id = new Guid("e3751712-0324-4be4-b2dc-332890e72b0c"),
                            DisplayOrder = 7,
                            Name = "Savings planning"
                        },
                        new
                        {
                            Id = new Guid("68523839-e035-43e2-a8e3-f54eaa273750"),
                            DisplayOrder = 8,
                            Name = "Investment planning"
                        },
                        new
                        {
                            Id = new Guid("96dadc7a-7b5a-4fa0-bea8-8423335d7c45"),
                            DisplayOrder = 9,
                            Name = "Employee Benefits"
                        },
                        new
                        {
                            Id = new Guid("d016b488-c4f8-47ff-a833-626b476648d4"),
                            DisplayOrder = 10,
                            Name = "Planning for Business Assurance"
                        },
                        new
                        {
                            Id = new Guid("009c5cec-9b9e-451f-98a9-8335671dc480"),
                            DisplayOrder = 11,
                            Name = "Planning for Medical Benefits"
                        },
                        new
                        {
                            Id = new Guid("27da6f44-891c-46b5-a215-6120eef79ac3"),
                            DisplayOrder = 12,
                            Name = "Funeral Benefits"
                        },
                        new
                        {
                            Id = new Guid("dbc296a3-34d3-4102-a5c0-c84061d88c3d"),
                            DisplayOrder = 13,
                            Name = "Wills"
                        },
                        new
                        {
                            Id = new Guid("44cc8294-b725-4d34-9900-fe662365c475"),
                            DisplayOrder = 14,
                            Name = "Medical Gap Cover"
                        });
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.Lookup.CompanyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CommissionPolicyNumberPrefixes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("dir_Company");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.Lookup.LicenseCategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("dir_LicenseCategory");

                    b.HasData(
                        new
                        {
                            Id = new Guid("50fb5d14-10d7-40f1-9e3d-b842fe756989"),
                            Code = "1.1",
                            Name = "Long-term Insurance subcategory A"
                        },
                        new
                        {
                            Id = new Guid("de6e5ba3-82a8-4622-bf21-bf13ae3df492"),
                            Code = "1.2",
                            Name = "Short-term Insurance Personal Lines"
                        },
                        new
                        {
                            Id = new Guid("a8626ca9-acfd-4476-b8bd-d2c1659fe67f"),
                            Code = "1.3",
                            Name = "Long-term Insurance"
                        },
                        new
                        {
                            Id = new Guid("1ab9fac3-6171-4653-8618-e627f95d3759"),
                            Code = "1.3.1",
                            Name = "Subcategory B1"
                        },
                        new
                        {
                            Id = new Guid("75719355-6db5-4620-9537-b710bf7d71e8"),
                            Code = "1.3.2",
                            Name = "Subcategory B2"
                        },
                        new
                        {
                            Id = new Guid("37059d66-8d91-424d-9c76-146e28ce01d4"),
                            Code = "1.4",
                            Name = "Long-term Insurance subcategory C"
                        },
                        new
                        {
                            Id = new Guid("83ba73cf-c0b0-4c55-8ffb-e11098289b7e"),
                            Code = "1.5",
                            Name = "Retail Pension Benefits"
                        },
                        new
                        {
                            Id = new Guid("dc03a55e-41eb-4284-80ab-2cafdf6a60c4"),
                            Code = "1.6",
                            Name = "Short-term Insurance Commercial Lines"
                        },
                        new
                        {
                            Id = new Guid("34660bf9-8396-4bfd-8edb-481ce214a6b9"),
                            Code = "1.7",
                            Name = "Pension Fund Benefits"
                        },
                        new
                        {
                            Id = new Guid("19ade5aa-81e0-456e-aff2-84a4f8b58c44"),
                            Code = "1.8",
                            Name = "Securities and instruments: Shares"
                        },
                        new
                        {
                            Id = new Guid("b5c7d31a-177b-491a-a142-b1662febc6bf"),
                            Code = "1.9",
                            Name = "Securities and Instruments: Money market instruments"
                        },
                        new
                        {
                            Id = new Guid("6b7b8c1d-9d05-44ac-9afc-2b4594dfae9f"),
                            Code = "1.10",
                            Name = "Securities and Instruments: Debentures and securitised debt"
                        },
                        new
                        {
                            Id = new Guid("e1b47d47-1109-4c6a-bfdf-681dce8fc596"),
                            Code = "1.11",
                            Name = "Securities and Instruments: Warrants, certificates and other instruments acknowledging debt"
                        },
                        new
                        {
                            Id = new Guid("e47a4a36-ed52-4d1c-b9c7-080df298d58d"),
                            Code = "1.12",
                            Name = "Securities and Instruments: Bonds"
                        },
                        new
                        {
                            Id = new Guid("3f35cf49-fb8c-48a7-a7ce-7e2de19eb0ad"),
                            Code = "1.13",
                            Name = "Securities and Instruments: Derivative instruments excluding warrants"
                        },
                        new
                        {
                            Id = new Guid("bf1c2f4e-9444-4795-b245-059f3bd1f11f"),
                            Code = "1.14",
                            Name = "Participatory Interests in one or more collective Investments schemes"
                        },
                        new
                        {
                            Id = new Guid("bdca849f-ff58-4dec-a3f8-2c2397fcec1d"),
                            Code = "1.15",
                            Name = "Forex Investment Business"
                        },
                        new
                        {
                            Id = new Guid("01ef566a-fd9a-4ed7-a166-45a15bd0ff05"),
                            Code = "1.16",
                            Name = "Health Service Benefits"
                        },
                        new
                        {
                            Id = new Guid("d7c3a276-53a7-40be-b596-26eceec8b801"),
                            Code = "1.17",
                            Name = "Long-term Deposits"
                        },
                        new
                        {
                            Id = new Guid("21664afe-a0ff-4dcf-9618-8cd19ad6022e"),
                            Code = "1.18",
                            Name = "Short-term Deposits"
                        },
                        new
                        {
                            Id = new Guid("be5c076f-a279-49f3-bac2-eac51106d872"),
                            Code = "1.19",
                            Name = "Friendly Society Benefits"
                        },
                        new
                        {
                            Id = new Guid("f91cec3f-1a03-4d6c-8ec9-0d2c8f1b0080"),
                            Code = "2.1",
                            Name = "Long-term Insurance"
                        },
                        new
                        {
                            Id = new Guid("89bd2ad2-3e82-4ea9-9c70-2c1dcb7be2df"),
                            Code = "2.1.1",
                            Name = "Subcategory B1"
                        },
                        new
                        {
                            Id = new Guid("95af0aa3-0048-4a92-aae6-9bf6a08ea269"),
                            Code = "2.1.2",
                            Name = "Subcategory B2"
                        },
                        new
                        {
                            Id = new Guid("60314bbd-1330-4893-b81f-704372a62915"),
                            Code = "2.2",
                            Name = "Long-term Insurance subcategory C"
                        },
                        new
                        {
                            Id = new Guid("61616b5b-d0c9-4418-b5e1-459bf50501e4"),
                            Code = "2.3",
                            Name = "Retail Pension Benefits"
                        },
                        new
                        {
                            Id = new Guid("554467e1-caf9-4703-8ae8-65c802ca7964"),
                            Code = "2.4",
                            Name = "Pension Fund Benefits"
                        },
                        new
                        {
                            Id = new Guid("bcbaf86e-dd7a-4649-a244-32e7a3811bca"),
                            Code = "2.5",
                            Name = "Securities and instruments: Shares"
                        },
                        new
                        {
                            Id = new Guid("69bd2568-b0c8-408b-b43b-9d2979f26707"),
                            Code = "2.6",
                            Name = "Securities and Instruments: Money market instruments"
                        },
                        new
                        {
                            Id = new Guid("0350fdd6-bf18-4ad0-b876-e74000fcecaa"),
                            Code = "2.7",
                            Name = "Securities and Instruments: Debentures and securitised debt"
                        },
                        new
                        {
                            Id = new Guid("0c205964-0bff-4f59-817c-3274e07941f7"),
                            Code = "2.8",
                            Name = "Securities and Instruments: Warrants, certificates and other instruments acknowledging debt"
                        },
                        new
                        {
                            Id = new Guid("d12d9ba6-2618-4294-9357-17bc439fc80e"),
                            Code = "2.9",
                            Name = "Securities and Instruments: Bonds"
                        },
                        new
                        {
                            Id = new Guid("04fe22be-ed1b-4221-8b87-3f6b3e64138d"),
                            Code = "2.10",
                            Name = "Securities and Instruments: Derivative instruments excluding warrants"
                        },
                        new
                        {
                            Id = new Guid("d91e5fbc-b425-48c2-8c4d-d38dadb2c372"),
                            Code = "2.11",
                            Name = "Participatory Interests in one or more collective Investments schemes"
                        },
                        new
                        {
                            Id = new Guid("261ba3b0-be07-48d7-83e1-70faaed8298c"),
                            Code = "2.12",
                            Name = "Forex Investment Business"
                        },
                        new
                        {
                            Id = new Guid("d65982e7-12f0-40e5-83cb-3c3035b21bb8"),
                            Code = "2.13",
                            Name = "Long-term Deposits"
                        },
                        new
                        {
                            Id = new Guid("f82de6cf-6106-4bc5-9c02-938b069deb66"),
                            Code = "2.14",
                            Name = "Short-term Deposits"
                        });
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.Lookup.UserTypeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("dir_UserType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("70a67bcf-f8d3-8fe7-9c3e-b4b8b9bf9cc8"),
                            DisplayOrder = 1,
                            Name = "Broker"
                        },
                        new
                        {
                            Id = new Guid("442f9050-bde4-9aa6-75f5-a9a7e5f84a5c"),
                            DisplayOrder = 2,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("d3155541-8b53-64d7-343e-57d6e5c959db"),
                            DisplayOrder = 3,
                            Name = "Support"
                        });
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.Lookup.VATRateEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("dir_VATRate");

                    b.HasData(
                        new
                        {
                            Id = new Guid("327abe6a-c200-2e53-ba63-e665174438b9"),
                            EndDate = new DateTime(2018, 3, 31, 23, 59, 59, 0, DateTimeKind.Unspecified),
                            Rate = 14m
                        },
                        new
                        {
                            Id = new Guid("490e393a-71bb-b54c-99cf-87ca4e8a88dc"),
                            Rate = 15m,
                            StartDate = new DateTime(2018, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.OrganisationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationIds")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("'[]'");

                    b.Property<string>("Config")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("'{ }'");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("dir_Organisation");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.RoleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("idn_Role");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.RoleToUseCaseEntity", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(32);

                    b.Property<string>("UseCaseId")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("RoleId", "UseCaseId");

                    b.HasIndex("UseCaseId");

                    b.ToTable("dir_RoleToUseCase");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.UseCaseEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("dir_UseCase");

                    b.HasData(
                        new
                        {
                            Id = "dir_view_users",
                            ApplicationId = new Guid("66c3b4e8-8a30-4a4b-be4d-3928d12fefe9"),
                            Name = "View Users"
                        },
                        new
                        {
                            Id = "dir_edit_users",
                            ApplicationId = new Guid("66c3b4e8-8a30-4a4b-be4d-3928d12fefe9"),
                            Name = "Edit Users"
                        },
                        new
                        {
                            Id = "dir_view_organisations",
                            ApplicationId = new Guid("66c3b4e8-8a30-4a4b-be4d-3928d12fefe9"),
                            Name = "View Organisations"
                        },
                        new
                        {
                            Id = "dir_edit_organisations",
                            ApplicationId = new Guid("66c3b4e8-8a30-4a4b-be4d-3928d12fefe9"),
                            Name = "Edit Organisations"
                        },
                        new
                        {
                            Id = "dir_view_branches",
                            ApplicationId = new Guid("66c3b4e8-8a30-4a4b-be4d-3928d12fefe9"),
                            Name = "View Branches"
                        },
                        new
                        {
                            Id = "dir_edit_branches",
                            ApplicationId = new Guid("66c3b4e8-8a30-4a4b-be4d-3928d12fefe9"),
                            Name = "Edit Branches"
                        },
                        new
                        {
                            Id = "dir_view_roles",
                            ApplicationId = new Guid("66c3b4e8-8a30-4a4b-be4d-3928d12fefe9"),
                            Name = "View Roles"
                        },
                        new
                        {
                            Id = "dir_edit_roles",
                            ApplicationId = new Guid("66c3b4e8-8a30-4a4b-be4d-3928d12fefe9"),
                            Name = "Edit Roles"
                        },
                        new
                        {
                            Id = "dir_view_audit_logs",
                            ApplicationId = new Guid("66c3b4e8-8a30-4a4b-be4d-3928d12fefe9"),
                            Name = "View Audit Logs"
                        },
                        new
                        {
                            Id = "clt_view_clients",
                            ApplicationId = new Guid("605ea52c-3627-48e2-8f7c-4819c5ea555b"),
                            Name = "View Clients"
                        },
                        new
                        {
                            Id = "clt_edit_clients",
                            ApplicationId = new Guid("605ea52c-3627-48e2-8f7c-4819c5ea555b"),
                            Name = "Edit Clients"
                        },
                        new
                        {
                            Id = "clt_view_policies",
                            ApplicationId = new Guid("605ea52c-3627-48e2-8f7c-4819c5ea555b"),
                            Name = "View Policies"
                        },
                        new
                        {
                            Id = "clt_edit_policies",
                            ApplicationId = new Guid("605ea52c-3627-48e2-8f7c-4819c5ea555b"),
                            Name = "Edit Policies"
                        },
                        new
                        {
                            Id = "clt_view_contacts",
                            ApplicationId = new Guid("605ea52c-3627-48e2-8f7c-4819c5ea555b"),
                            Name = "View Contacts"
                        },
                        new
                        {
                            Id = "clt_edit_contacts",
                            ApplicationId = new Guid("605ea52c-3627-48e2-8f7c-4819c5ea555b"),
                            Name = "Edit Contacts"
                        },
                        new
                        {
                            Id = "clt_import_clients",
                            ApplicationId = new Guid("605ea52c-3627-48e2-8f7c-4819c5ea555b"),
                            Name = "Import Clients"
                        },
                        new
                        {
                            Id = "clt_export_clients",
                            ApplicationId = new Guid("605ea52c-3627-48e2-8f7c-4819c5ea555b"),
                            Name = "Export Clients"
                        },
                        new
                        {
                            Id = "com_import_commissions",
                            ApplicationId = new Guid("2fca4500-9142-4940-aaf4-b18925c96d66"),
                            Name = "Import Commissions"
                        },
                        new
                        {
                            Id = "com_view_commissions",
                            ApplicationId = new Guid("2fca4500-9142-4940-aaf4-b18925c96d66"),
                            Name = "View Commissions"
                        },
                        new
                        {
                            Id = "com_edit_commissions",
                            ApplicationId = new Guid("2fca4500-9142-4940-aaf4-b18925c96d66"),
                            Name = "Edit Commissions"
                        },
                        new
                        {
                            Id = "com_view_commission_statements",
                            ApplicationId = new Guid("2fca4500-9142-4940-aaf4-b18925c96d66"),
                            Name = "View Commission Statements"
                        },
                        new
                        {
                            Id = "com_edit_commission_statements",
                            ApplicationId = new Guid("2fca4500-9142-4940-aaf4-b18925c96d66"),
                            Name = "Edit Commission Statements"
                        },
                        new
                        {
                            Id = "com_view_report_client_revenue",
                            ApplicationId = new Guid("2fca4500-9142-4940-aaf4-b18925c96d66"),
                            Name = "View Commission Client Revenue Report"
                        },
                        new
                        {
                            Id = "com_view_commission_allocations",
                            ApplicationId = new Guid("2fca4500-9142-4940-aaf4-b18925c96d66"),
                            Name = "View Commission Allocations"
                        },
                        new
                        {
                            Id = "com_edit_commission_allocations",
                            ApplicationId = new Guid("2fca4500-9142-4940-aaf4-b18925c96d66"),
                            Name = "Edit Commission Allocations"
                        },
                        new
                        {
                            Id = "com_view_report_user_monthly_commission",
                            ApplicationId = new Guid("2fca4500-9142-4940-aaf4-b18925c96d66"),
                            Name = "View Commission User Monthly Commission Report"
                        },
                        new
                        {
                            Id = "com_edit_commission_split_rules",
                            ApplicationId = new Guid("2fca4500-9142-4940-aaf4-b18925c96d66"),
                            Name = "Edit Commission Split Rules"
                        },
                        new
                        {
                            Id = "com_view_commission_split_rules",
                            ApplicationId = new Guid("2fca4500-9142-4940-aaf4-b18925c96d66"),
                            Name = "View Commission Split Rules"
                        },
                        new
                        {
                            Id = "com_view_report_past_revenue_commission",
                            ApplicationId = new Guid("2fca4500-9142-4940-aaf4-b18925c96d66"),
                            Name = "View Commission Projections Report"
                        },
                        new
                        {
                            Id = "com_view_report_commission_lapse",
                            ApplicationId = new Guid("2fca4500-9142-4940-aaf4-b18925c96d66"),
                            Name = "View Commission Lapse Report"
                        });
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Aliases")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Scope")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<Guid>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("'70a67bcf-f8d3-8fe7-9c3e-b4b8b9bf9cc8'");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("UserTypeId");

                    b.ToTable("idn_User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Directory.RoleEntity", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Directory.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Directory.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Directory.RoleEntity", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneAdvisor.Data.Entities.Directory.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Directory.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Client.ClientEntity", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Client.Lookup.ClientTypeEntity", "ClientType")
                        .WithMany()
                        .HasForeignKey("ClientTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneAdvisor.Data.Entities.Client.Lookup.MarritalStatusEntity", "MarritalStatus")
                        .WithMany()
                        .HasForeignKey("MarritalStatusId");

                    b.HasOne("OneAdvisor.Data.Entities.Directory.OrganisationEntity", "Organisation")
                        .WithMany("Clients")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Client.ContactEntity", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Client.ClientEntity", "Client")
                        .WithMany("ClientContacts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneAdvisor.Data.Entities.Client.Lookup.ContactTypeEntity", "ContactType")
                        .WithMany()
                        .HasForeignKey("ContactTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Client.Lookup.PolicyProductEntity", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Directory.Lookup.CompanyEntity", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneAdvisor.Data.Entities.Client.Lookup.PolicyProductTypeEntity", "PolicyProductType")
                        .WithMany()
                        .HasForeignKey("PolicyProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Client.Lookup.PolicyProductTypeEntity", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Client.Lookup.PolicyTypeEntity", "PolicyType")
                        .WithMany("PolicyProductTypes")
                        .HasForeignKey("PolicyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Client.PolicyEntity", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Client.ClientEntity", "Client")
                        .WithMany("ClientPolicies")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneAdvisor.Data.Entities.Directory.Lookup.CompanyEntity", "Company")
                        .WithMany("ClientPolicies")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneAdvisor.Data.Entities.Client.Lookup.PolicyProductEntity", "PolicyProduct")
                        .WithMany("Policies")
                        .HasForeignKey("PolicyProductId");

                    b.HasOne("OneAdvisor.Data.Entities.Client.Lookup.PolicyProductTypeEntity", "PolicyProductType")
                        .WithMany("Policies")
                        .HasForeignKey("PolicyProductTypeId");

                    b.HasOne("OneAdvisor.Data.Entities.Client.Lookup.PolicyTypeEntity", "PolicyType")
                        .WithMany("Policies")
                        .HasForeignKey("PolicyTypeId");

                    b.HasOne("OneAdvisor.Data.Entities.Directory.UserEntity", "User")
                        .WithMany("Policies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Commission.CommissionAllocationEntity", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Client.ClientEntity", "FromClient")
                        .WithMany("FromCommissionAllocations")
                        .HasForeignKey("FromClientId")
                        .HasConstraintName("ForeignKey_FromClient_FromCommissionAllocations")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OneAdvisor.Data.Entities.Client.ClientEntity", "ToClient")
                        .WithMany("ToCommissionAllocations")
                        .HasForeignKey("ToClientId")
                        .HasConstraintName("ForeignKey_ToClient_ToCommissionAllocations")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Commission.CommissionAllocationPolicyEntity", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Commission.CommissionAllocationEntity", "CommissionAllocation")
                        .WithMany("CommissionAllocationPolicies")
                        .HasForeignKey("CommissionAllocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneAdvisor.Data.Entities.Client.PolicyEntity", "Policy")
                        .WithMany()
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Commission.CommissionEntity", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Commission.CommissionStatementEntity", "CommissionStatement")
                        .WithMany("Commissions")
                        .HasForeignKey("CommissionStatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneAdvisor.Data.Entities.Commission.Lookup.CommissionTypeEntity", "CommissionType")
                        .WithMany()
                        .HasForeignKey("CommissionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneAdvisor.Data.Entities.Client.PolicyEntity", "Policy")
                        .WithMany()
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneAdvisor.Data.Entities.Directory.UserEntity", "User")
                        .WithMany("Commissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Commission.CommissionErrorEntity", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Client.ClientEntity", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("OneAdvisor.Data.Entities.Commission.CommissionStatementEntity", "CommissionStatement")
                        .WithMany("CommissionErrors")
                        .HasForeignKey("CommissionStatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneAdvisor.Data.Entities.Client.PolicyEntity", "Policy")
                        .WithMany()
                        .HasForeignKey("PolicyId");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Commission.CommissionSplitRuleEntity", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Directory.UserEntity", "User")
                        .WithMany("CommissionSplitRules")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Commission.CommissionSplitRulePolicyEntity", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Commission.CommissionSplitRuleEntity", "CommissionSplitRule")
                        .WithMany("CommissionSplitRulePolicy")
                        .HasForeignKey("CommissionSplitRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneAdvisor.Data.Entities.Client.PolicyEntity", "Policy")
                        .WithMany("CommissionSplitRulePolicies")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Commission.CommissionStatementEntity", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Directory.Lookup.CompanyEntity", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneAdvisor.Data.Entities.Directory.OrganisationEntity", "Organisation")
                        .WithMany()
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Commission.Lookup.CommissionTypeEntity", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Commission.Lookup.CommissionEarningsTypeEntity", "CommissionEarningsType")
                        .WithMany()
                        .HasForeignKey("CommissionEarningsTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneAdvisor.Data.Entities.Client.Lookup.PolicyTypeEntity", "PolicyType")
                        .WithMany("CommissionTypes")
                        .HasForeignKey("PolicyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.AuditLogEntity", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Directory.UserEntity", "User")
                        .WithMany("AuditLogs")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.BranchEntity", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Directory.OrganisationEntity", "Organisation")
                        .WithMany("Branches")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.RoleEntity", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Directory.ApplicationEntity", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId");
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.RoleToUseCaseEntity", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Directory.RoleEntity", "Role")
                        .WithMany("RoleToUseCases")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OneAdvisor.Data.Entities.Directory.UseCaseEntity", "UseCase")
                        .WithMany("RoleToUseCases")
                        .HasForeignKey("UseCaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.UseCaseEntity", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Directory.ApplicationEntity", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OneAdvisor.Data.Entities.Directory.UserEntity", b =>
                {
                    b.HasOne("OneAdvisor.Data.Entities.Directory.BranchEntity", "Branch")
                        .WithMany("Users")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OneAdvisor.Data.Entities.Directory.Lookup.UserTypeEntity", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
