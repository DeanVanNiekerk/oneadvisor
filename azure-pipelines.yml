# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

jobs:
  - job: api_build
    pool:
      vmImage: "Ubuntu 16.04"
    variables:
      buildConfiguration: "Release"
    steps:
      - task: DotNetCoreInstaller@0
        displayName: "Use .NET Core SDK Tool Installer"
        inputs:
          version: 2.2.100
      - script: |
          dotnet restore
        displayName: "restore packages"
      - script: |
          dotnet test --filter Category!=Integration
        displayName: "run tests"
      - script: |
          dotnet publish --configuration $(buildConfiguration) /p:Version=0.17.5
        displayName: "publish for $(buildConfiguration)"
      - task: CopyFiles@2
        inputs:
          sourceFolder: "src/oneadvisor/api/bin/$(buildConfiguration)/netcoreapp2.2/publish"
          targetFolder: $(Build.ArtifactStagingDirectory)
          cleanTargetFolder: true
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: $(Build.ArtifactStagingDirectory)
          artifactName: api
  - job: web_build
    pool:
      vmImage: "Ubuntu 16.04"
    steps:
      - script: |
          npm install
        displayName: "install client packages"
        workingDirectory: "src/oneadvisor/web"
      - script: |
          npm run lint
        displayName: "linting check"
        workingDirectory: "src/oneadvisor/web"
      - script: |
          npm run test
        displayName: "run tests"
        workingDirectory: "src/oneadvisor/web"
      - script: |
          npm install
        displayName: "install server packages"
        workingDirectory: "src/oneadvisor/web/server"
      - script: |
          npm run build:staging
        displayName: "build: staging"
        workingDirectory: "src/oneadvisor/web"
      - task: CopyFiles@2
        inputs:
          sourceFolder: "src/oneadvisor/web/server"
          targetFolder: $(Build.ArtifactStagingDirectory)
          cleanTargetFolder: true
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: $(Build.ArtifactStagingDirectory)
          artifactName: web.staging
      - script: |
          npm run build:production
        displayName: "build: production"
        workingDirectory: "src/oneadvisor/web"
      - task: CopyFiles@2
        inputs:
          sourceFolder: "src/oneadvisor/web/server"
          targetFolder: $(Build.ArtifactStagingDirectory)
          cleanTargetFolder: true
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: $(Build.ArtifactStagingDirectory)
          artifactName: web.production
